apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.global.name }}-worker"
  namespace: {{ .Release.Namespace }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.worker.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: "{{ .Values.global.name }}-worker"
  template:
    metadata:
      labels:
        app: "{{ .Values.global.name }}-worker"
        version: "{{ .Values.worker.image.tag }}"
    spec:
      {{- if .Values.nodeSelector.enabled }}
      {{- with .Values.nodeSelector.props }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      {{- with .Values.worker.volumes }}
      volumes:
          {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: "{{ .Values.global.name }}-worker"
          image: "{{ .Values.worker.image.repository }}:{{ .Values.worker.image.tag }}"
          {{- with .Values.worker.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          readinessProbe:
            exec:
              command: ["celery", "--workdir", "/app/celery_", "inspect", "ping", "tasks.add"]
            initialDelaySeconds: 80
            timeoutSeconds: 15
          livenessProbe:
            exec:
              command: ["celery", "--workdir", "/app/celery_", "inspect", "ping", "tasks.add"]
            initialDelaySeconds: 100
            timeoutSeconds: 15
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
          {{- range $k, $v := .Values.worker.env }}
            - name: {{ $k }}
              value: {{ $v | quote }}
          {{- end }}
          {{- range $k, $v := .Values.worker.secret }}
            - name: {{ $k }}
              valueFrom:
                secretKeyRef:
                  name: "{{ $.Values.global.name }}-worker"
                  key: {{ $k }}
          {{- end }}
