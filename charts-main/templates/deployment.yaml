apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.global.name }}
  namespace: {{ .Release.Namespace }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ .Values.global.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.global.name }}
        version: "{{ .Values.image.tag }}"
    spec:
      {{- if .Values.nodeSelector.enabled }}
      {{- with .Values.nodeSelector.props }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      {{- with .Values.volumes }}
      volumes:
          {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Values.global.name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - containerPort: 5000
          readinessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:5000", "-connect-timeout=100ms", "-rpc-timeout=150ms"]
            initialDelaySeconds: 80
          livenessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:5000", "-connect-timeout=100ms", "-rpc-timeout=150ms"]
            initialDelaySeconds: 100
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
          {{- range $k, $v := .Values.env }}
            - name: {{ $k }}
              value: {{ $v | quote }}
          {{- end }}
          {{- range $k, $v := .Values.secret }}
            - name: {{ $k }}
              valueFrom:
                secretKeyRef:
                  name: {{ $.Values.global.name }}
                  key: {{ $k }}
          {{- end }}
